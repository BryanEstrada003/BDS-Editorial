drop database if exists editorial;
-- MySQL Script generated by MySQL Workbench
-- Sat Dec 31 15:07:28 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Editorial
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Editorial
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Editorial` DEFAULT CHARACTER SET utf8 ;
USE `Editorial` ;

-- -----------------------------------------------------
-- Table `Editorial`.`Autor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Editorial`.`Autor` (
  `cedula_Autor` VARCHAR(10) NOT NULL,
  `Nombre` VARCHAR(30) NOT NULL,
  `Apellido` VARCHAR(45) NOT NULL,
  `Telefono` VARCHAR(10) NULL,
  `Direccion` VARCHAR(100) NOT NULL,
  `Correo` VARCHAR(128) NULL,
  `fecha_Nacimiento` DATE NOT NULL,
  `Especialidad` VARCHAR(30) NULL,
  `Salario` DECIMAL NOT NULL DEFAULT 450.00,
  PRIMARY KEY (`cedula_Autor`));


-- -----------------------------------------------------
-- Table `Editorial`.`Articulo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Editorial`.`Articulo` (
  `idArticulo` INT NOT NULL AUTO_INCREMENT,
  `Descripción` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`idArticulo`));


-- -----------------------------------------------------
-- Table `Editorial`.`RevistaInicial`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Editorial`.`RevistaInicial` (
  `idRevistaInicial` INT NOT NULL AUTO_INCREMENT,
  `Titulo` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idRevistaInicial`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Editorial`.`Editor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Editorial`.`Editor` (
  `cedula_Ed` VARCHAR(10) NOT NULL,
  `Nombre` VARCHAR(30) NOT NULL,
  `Apellido` VARCHAR(45) NOT NULL,
  `Telefono` VARCHAR(10) NULL,
  `Direccion` VARCHAR(100) NOT NULL,
  `Correo` VARCHAR(128) NULL,
  `fecha_Nacimiento` DATE NOT NULL,
  `Salario` DECIMAL NOT NULL DEFAULT 450.00,
  PRIMARY KEY (`cedula_Ed`));


-- -----------------------------------------------------
-- Table `Editorial`.`Aprobacion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Editorial`.`Aprobacion` (
  `idArticulo` INT NOT NULL,
  `idRevistaInicial` INT NOT NULL,
  `cedula_Ed` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`idArticulo`, `idRevistaInicial`, `cedula_Ed`),
  INDEX `fk_Aprobación_Articulo1_idx` (`idArticulo` ASC) VISIBLE,
  INDEX `fk_Aprobación_Revista1_idx` (`idRevistaInicial` ASC) VISIBLE,
  INDEX `fk_Aprobacion_Editor1_idx` (`cedula_Ed` ASC) VISIBLE,
  CONSTRAINT `fk_Aprobación_Articulo1`
    FOREIGN KEY (`idArticulo`)
    REFERENCES `Editorial`.`Articulo` (`idArticulo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Aprobación_Revista1`
    FOREIGN KEY (`idRevistaInicial`)
    REFERENCES `Editorial`.`RevistaInicial` (`idRevistaInicial`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Aprobacion_Editor1`
    FOREIGN KEY (`cedula_Ed`)
    REFERENCES `Editorial`.`Editor` (`cedula_Ed`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Editorial`.`HistorialArticulo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Editorial`.`HistorialArticulo` (
  `idArticulo` INT NOT NULL,
  `Comentario` VARCHAR(200) NOT NULL,
  `Estado` VARCHAR(45) NOT NULL,
  `cedula_Ed` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`idArticulo`, `cedula_Ed`),
  INDEX `fk_HistorialArticulo_Articulo1_idx` (`idArticulo` ASC) VISIBLE,
  INDEX `fk_HistorialArticulo_Editor1_idx` (`cedula_Ed` ASC) VISIBLE,
  CONSTRAINT `fk_HistorialArticulo_Articulo1`
    FOREIGN KEY (`idArticulo`)
    REFERENCES `Editorial`.`Articulo` (`idArticulo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_HistorialArticulo_Editor1`
    FOREIGN KEY (`cedula_Ed`)
    REFERENCES `Editorial`.`Editor` (`cedula_Ed`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Editorial`.`Escribe`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Editorial`.`Escribe` (
  `cedula_Autor` VARCHAR(10) NOT NULL,
  `idArticulo` INT NOT NULL,
  PRIMARY KEY (`cedula_Autor`, `idArticulo`),
  INDEX `fk_Escribe_Articulo1_idx` (`idArticulo` ASC) VISIBLE,
  CONSTRAINT `fk_Escribe_Autor1`
    FOREIGN KEY (`cedula_Autor`)
    REFERENCES `Editorial`.`Autor` (`cedula_Autor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Escribe_Articulo1`
    FOREIGN KEY (`idArticulo`)
    REFERENCES `Editorial`.`Articulo` (`idArticulo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Editorial`.`Maquetacion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Editorial`.`Maquetacion` (
  `idRevistaInicial` INT NOT NULL,
  `fecha_Inicio` DATE NOT NULL,
  `fecha_Fin` DATE NOT NULL,
  `Comentario` VARCHAR(250) NULL,
  PRIMARY KEY (`idRevistaInicial`),
  INDEX `fk_Maquetación_Revista1_idx` (`idRevistaInicial` ASC) VISIBLE,
  CONSTRAINT `fk_Maquetación_Revista1`
    FOREIGN KEY (`idRevistaInicial`)
    REFERENCES `Editorial`.`RevistaInicial` (`idRevistaInicial`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Editorial`.`Diseñador`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Editorial`.`Diseñador` (
  `cedula_Dis` VARCHAR(10) NOT NULL,
  `Nombre` VARCHAR(30) NOT NULL,
  `Apellido` VARCHAR(45) NOT NULL,
  `Telefono` VARCHAR(10) NULL,
  `Direccion` VARCHAR(100) NOT NULL,
  `Correo` VARCHAR(128) NULL,
  `fecha_Nacimiento` DATE NOT NULL,
  `Salario` DECIMAL NOT NULL DEFAULT 450.00,
  PRIMARY KEY (`cedula_Dis`));


-- -----------------------------------------------------
-- Table `Editorial`.`Diseña`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Editorial`.`Diseña` (
  `idRevistaInicial` INT NOT NULL,
  `cedula_Dis` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`idRevistaInicial`, `cedula_Dis`),
  INDEX `fk_Diseña_Diseñador1_idx` (`cedula_Dis` ASC) VISIBLE,
  INDEX `fk_Diseña_Maquetacion1_idx` (`idRevistaInicial` ASC) VISIBLE,
  CONSTRAINT `fk_Diseña_Diseñador1`
    FOREIGN KEY (`cedula_Dis`)
    REFERENCES `Editorial`.`Diseñador` (`cedula_Dis`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Diseña_Maquetacion1`
    FOREIGN KEY (`idRevistaInicial`)
    REFERENCES `Editorial`.`Maquetacion` (`idRevistaInicial`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Editorial`.`Seccion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Editorial`.`Seccion` (
  `idSeccion` INT NOT NULL AUTO_INCREMENT,
  `Seccion` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idSeccion`),
  UNIQUE INDEX `Seccion_UNIQUE` (`Seccion` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Editorial`.`Publicacion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Editorial`.`Publicacion` (
  `idRevistaInicial` INT NOT NULL,
  `idSeccion` INT NOT NULL,
  `fechaPublicacion` DATE NOT NULL,
  `Precio` DECIMAL NOT NULL DEFAULT 30.00,
  PRIMARY KEY (`idRevistaInicial`, `idSeccion`),
  INDEX `fk_Publicacion_Seccion1_idx` (`idSeccion` ASC) VISIBLE,
  CONSTRAINT `fk_Publicacion_Maquetacion1`
    FOREIGN KEY (`idRevistaInicial`)
    REFERENCES `Editorial`.`Maquetacion` (`idRevistaInicial`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Publicacion_Seccion1`
    FOREIGN KEY (`idSeccion`)
    REFERENCES `Editorial`.`Seccion` (`idSeccion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

INSERT INTO Autor(cedula_Autor, Nombre, Apellido, Telefono, Direccion, Correo, fecha_Nacimiento, Especialidad) VALUES 
('0987629425', 'Michael', 'Estrabao', '3374832949', 'Acasias', null,'1999-01-01', 'Biología'),
('0912345098', 'Carlos', 'Tingo', '8475629403', 'Florida', 'tingocarl@espol.edu.ec' ,'1999-04-10', 'Química'),
('0927467832', 'Michelle', 'Santana', '2840593849', 'Carchi y Tungurahua', 'micasan@espol.edu.ec','1999-11-01', 'Física'),
('0982345767', 'Clara', 'Vera', '2849503758', 'Carchi y Velez', null,'2000-09-01', 'Computación');

insert into Articulo(Descripción) VALUES
('Investigación acerca de las computadoras cuánticas'), #compu-fis -1-1
('Investigación acerca del arte por medio de A.I.'), #compu -2-1
('Investigación acerca de la vida marina en las islas Malvinas'), #biol -3-2
('Investigación acerca del calentamiento global en la actualidad'), #biol -4-2
('Investigación acerca de los agujeros negros'), #fis -5-3
('Visita a las instalaciones de la Organización Europea para la Investigación Nuclear "CERN"'), #fis -6-3
('Potenciador de la quimioterapia para pacientes de cáncer'), #quim -7-4
('Función de los enlaces químicos en sólidos para desarrollos en nanotecnología'), #quim -8-4
('Investigacion acerca de los microplásticos'); #quim -9

insert into Escribe values
('0987629425', 3),
('0987629425', 4),
('0912345098', 7),
('0912345098', 8),
('0927467832', 1),
('0927467832', 5),
('0982345767', 1),
('0982345767', 2),
('0912345098', 9);

insert into editor(cedula_Ed, Nombre, Apellido, Telefono, Direccion, Correo, fecha_Nacimiento) values
('0957483647', 'Raul', 'Salinas', '3049586737', 'Carchi y Tungurahua','dmurphy@espol.edu.ec', '1999-01-01'),
('0912983746', 'Ana', 'Santos', '4758392748', 'Carchi y Tungurahua','jfirrelli@espol.edu.ec', '1995-06-01'),
('0927364518', 'Steven', 'Universe', '4758354625', 'Los Ríos y Clemente Ballen',null, '1997-08-10');

insert into historialarticulo values
(1, 'Listo para adjuntar en su respectiva revista', 'True', '0957483647'),
(2, 'Listo para adjuntar en su respectiva revista', 'True', '0957483647'),
(3, 'Listo para adjuntar en su respectiva revista', 'True', '0957483647'),
(4, 'Listo para adjuntar en su respectiva revista', 'True', '0912983746'),
(5, 'Listo para adjuntar en su respectiva revista', 'True', '0912983746'),
(6, 'Listo para adjuntar en su respectiva revista', 'True', '0912983746'),
(7, 'Listo para adjuntar en su respectiva revista', 'True', '0927364518'),
(8, 'Listo para adjuntar en su respectiva revista', 'True', '0927364518'),
(9, 'Falta más detalles, falta de referencias confiables', 'False', '0927364518');

insert into diseñador(cedula_Dis, Nombre, Apellido, Telefono, Direccion, Correo, fecha_Nacimiento) values
('0947587653', 'Clara', 'Escobar', '2029837489', 'Carchi y Tungurahua','ljennings@espol.edu.ec', '1999-04-01'),
('0934526736', 'Luis', 'Herrera', '2345098764', 'Carchi y Tungurahua',null, '1995-10-01'),
('0987652345', 'Miguel', 'Estrada', '1029475947', 'Los Ríos y Clemente Ballen',null, '1997-09-10');

insert into revistainicial(Titulo) values
('Avances en el área de la informática'),
('La vida en el planeta Tierra actualmente'),
('CERN'),
('Avances en el área de la química');

insert into aprobacion values
(1, 1, '0957483647'),
(2, 1, '0957483647'),
(3, 2, '0957483647'),
(4, 2, '0912983746'),
(5, 3, '0912983746'),
(6, 3, '0912983746'),
(7, 4, '0927364518'),
(8, 4, '0927364518');

insert into diseña values
(1,'0947587653'),
(2,'0934526736'),
(3,'0987652345'),
(4,'0947587653'),
(1,'0934526736'),
(2,'0987652345'),
(3,'0947587653'),
(4,'0934526736');

insert into maquetacion(fecha_Inicio, fecha_Fin, idRevistaInicial) values
('2022-04-01', '2022-05-01', 1),#1
('2022-04-01', '2022-05-01', 2),#2
('2022-04-01', '2022-05-01', 3),#3
('2022-04-01', '2022-05-01', 4);#4

insert into seccion(Seccion) values
('Ciencia y Tecnología'),
('Divulgación Científica');

insert into publicacion(idRevistaInicial, idSeccion, fechaPublicacion) values
(1,2,'2022-06-01'),
(2,2,'2022-06-02'),
(3,1,'2022-06-03'),
(4,2,'2022-06-04');

drop procedure if exists obtenerEstadoArticulo;
DELIMITER //
CREATE PROCEDURE obtenerEstadoArticulo(IN idArticulo INT, OUT estado VARCHAR(255))
BEGIN
  -- Ejecutar la consulta y almacenar el resultado
  SELECT Estado FROM HistorialArticulo WHERE idArticulo = idArticulo INTO @estado;
  
  -- Verificar si la consulta devolvió algún resultado
  IF @estado IS NULL THEN
    -- Asignar un mensaje al parámetro de salida si el valor no existe en la tabla
    SET estado = 'El valor proporcionado para idArticulo no se encuentra en la tabla HistorialArticulo';
  ELSE
    -- Asignar el Estado al parámetro de salida si se encontró un resultado
    SET estado = @estado;
  END IF;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE crearSeccion(IN descripcion VARCHAR(45))
BEGIN
  -- Verificar si la sección ya existe
  SELECT COUNT(*) FROM Seccion WHERE descripcion = descripcion INTO @seccionExiste;
  
  -- Si la sección no existe, insertar una nueva fila en la tabla
  IF @seccionExiste = 0 THEN
    INSERT INTO Seccion (descripcion) VALUES (descripcion);
  ELSE
    -- Si la sección ya existe, mostrar un mensaje de error
    SELECT 'La sección ya existe';
  END IF;
END //
DELIMITER ;

DELIMITER $$
START TRANSACTION;
-- Verificar si ya existe un autor con la misma cédula
SELECT COUNT(*) INTO @count FROM Autor WHERE cedula_Autor = cedula_Autor;
-- Insertar el nuevo autor si no existe otro con la misma cédula
IF (@count = 0) THEN
  INSERT INTO Autor (cedula_Autor, Nombre, Apellido, Telefono, Direccion, Correo, fecha_Nacimiento, Especialidad, Salario)
  VALUES (cedula_Autor, Nombre, Apellido, Telefono, Direccion, Correo, fecha_Nacimiento, Especialidad, Salario);
ELSE
  -- Mostrar un mensaje de error
  SELECT 'Ya existe un autor con la cédula proporcionada' AS 'Error';
END IF;
-- Verificar si la operación falló
IF (ERROR CONDITION) THEN
  -- Deshacer la operación y terminar la transacción
  ROLLBACK;
ELSE
  -- Confirmar la operación y terminar la transacción
  COMMIT;
END IF;
end $$
DELIMITER ;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
